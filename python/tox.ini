# Reminder:  Running "tox" from the python source directory will:
#   - Create a sina source distribution (setup.py sdist)
#   - For every supported version of Python:
#     o Create a virtualenv in .tox/py$VERSION and install dependencies;
#     o Use pip to install Sina into this virtualenv; and
#     o Run sina tests.

[tox]
envlist = py{27,36}-{core,jupyter}
          flake8
          docs
skip_missing_interpreters = true

[testenv]
setenv =
# Set up a Jupyter notebook kernel for testing, where it is assumed there is
# only one test build at a time for the [workflow] account.
    jupyter: SINA_TEST_KERNEL = {env:SINA_TEST_KERNEL:sina-test}
    jupyter: HOME = {env:HOME}

commands =
    core: nosetests --with-xunit --xunit-file nosetests-{envname}.xml -a '!cassandra','!jupyter'
    core: sed -i.bak 's/testcase classname="\([^"]*\)/testcase classname="\1_{envname}/g' nosetests-{envname}.xml

    # Use the makefile to properly add Jupyter to the test virtual environment
    # to by-pass a tox setup issue with optional requirements that can arise
    # in some LC environments.
    jupyter: make jupyter VENV={envdir}
    jupyter: sh tests/set_jupyter_kernel.sh {env:SINA_TEST_KERNEL} {envdir}
    jupyter: nosetests --with-xunit --xunit-file nosetests-{envname}.xml -a 'jupyter'
    jupyter: sed -i.bak 's/testcase classname="\([^"]*\)/testcase classname="\1_{envname}/g' nosetests-{envname}.xml

deps =
    -r{toxinidir}/requirements/development.txt

whitelist_externals=
    make
    sed
    sh

# Reminder:  Settings for test environments (e.g., [testenv:docs]) will default
# to those defined in [testenv].

[testenv:docs]
# Closely based on c2c tox.ini, workaround for LC Sphinx not supporting failing on warning
whitelist_externals=
    mkdir
    bash

# Have Sphinx skip documentation for Jupyter Notebook tests for now since it
# appears other tools are needed (e.g., nbsphinx).
commands=
# If the build succeeds, the files built here will be deployed as documentation
    mkdir -p build
    bash -c "sphinx-apidoc -efT -o docs/source/generated_docs sina/ .tox/"
    bash -c "sphinx-apidoc -efT -o docs/source/generated_docs tests/ .tox/  tests/jupyter_test.py"
    bash -c "sphinx-build docs/source docs/build/html | tee build/sphinx_out.txt"
    # Fail on warnings
    bash -c "! grep  -i WARNING build/sphinx_out.txt"
    # Fail on bad indentation
    bash -c "! egrep -Rl ':(param|return|ref)' docs/build/html/**/*.html"

[testenv:flake8]
skip_install = true
commands = flake8

[testenv:pep8]
basepython = python3
deps = pep8
commands = pep8

# Pylint is currently outside the regression test process until the team
# has time to address reported issues.
[testenv:pylint]
skip_install = true
commands = 
    pylint --reports=y --ignore=.tox,pylint_venv,run_tests,test_venv sina tests
deps = pylint

[flake8]
max-line-length = 99
exclude =
    .tox,
    docs,
    tests/pylint_venv,
    tests/run_tests,
    tests/test_venv,
    venv

[pep8]
max-line-length = 99
exclude =
    .tox,
    docs,
    tests/run_tests,
    tests/test_venv,
    venv
