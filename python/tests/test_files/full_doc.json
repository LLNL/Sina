{
    "records": [
        {
            "application": "app",
            "id": "parent_1",
            "type": "parent",
            "version": "Unknown"
        },
        {
            "application": "fake",
            "data": {
                "scalar-2": {
                    "value": 0
                },
                "scalar-3": {
                    "tags": [
                        "input",
                        "output"
                    ],
                    "units": "km",
                    "value": 85
                },
                "scalar_1": {
                    "tags": [
                        "output"
                    ],
                    "value": 387.6
                },
                "value-1": {
                    "tags": [
                        "output"
                    ],
                    "units": "dayname",
                    "value": "This is intended to be a string long enough to test our ability to store what might be considered a 'long string.' In case this string is not long enough, additional things might be added, such as a list of favorite foods. Hopefully, though, the content of this string will be long enough to suffice without much modification. The target length is anything above 255 characters, and this string is 417 characters long"
                },
                "value-2": {
                    "tags": [],
                    "value": "12"
                },
                "value-3": {
                    "tags": [
                        "breakfast"
                    ],
                    "value": [
                        "eggs",
                        "milk",
                        "toast"
                    ]
                }
            },
            "files": {
                "foo.png": {
                    "mimetype": "png",
                    "tags": [
                        "output",
                        "spamfile"
                    ]
                }
            },
            "id": "child_1",
            "library_data": {
                "my_toplevel_lib": {
                    "data": {
                        "scalar_40": {
                            "value": 42
                        }
                    },
                    "library_data": {
                        "my_nested_lib": {
                            "curve_sets": {
                                "my_nested_curve_set": {
                                    "dependent": {
                                        "distance": {
                                            "tags": [
                                                "output"
                                            ],
                                            "value": [
                                                5,
                                                10,
                                                25
                                            ]
                                        }
                                    },
                                    "independent": {
                                        "time": {
                                            "value": [
                                                1,
                                                2,
                                                3
                                            ]
                                        }
                                    }
                                }
                            },
                            "data": {
                                "scalar_1": {
                                    "units": "F",
                                    "value": 99.9
                                }
                            }
                        }
                    }
                }
            },
            "type": "run",
            "user-defined": [
                {
                    "name": "RunID",
                    "value": 1
                }
            ],
            "version": "Unknown"
        },
        {
            "id": "spam",
            "type": "eggs"
        }
    ],
    "relationships": [
        {
            "object": "child_1",
            "predicate": "contains",
            "subject": "parent_1"
        },
        {
            "object": "spam",
            "predicate": "is",
            "subject": "spam"
        }
    ]
}
